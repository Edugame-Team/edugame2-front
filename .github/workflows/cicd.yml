name: CICD
on:
  push:
    branches:
      - master
      - develop
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
              
      - name: Caching node_modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules
            
      - name: get current version
        run:  echo "EDUGAME_PROJECT_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install node packages
        run: yarn install
      
      - name: Generate front web app
        run: yarn web:generate
      
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: web-build
        
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            edugame/front:latest
            edugame/front:${{ env.EDUGAME_PROJECT_VERSION }}
            
  deploy:
    name: Deploy on staging
    runs-on: ubuntu-latest
    steps:
      - name: Adding staging tag
        run: curl -X PUT -u "$AUTH" -H "Content-Type:$CONTENT_TYPE" -d "$MANIFEST" "$REGISTRY_NAME/v2/$REPOSITORY/manifests/$TAG_NEW"
        env:
          REGISTRY_NAME: "http://hub.docker.com:5000"
          REPOSITORY: edugame/front
          TAG_OLD: ${{ env.EDUGAME_PROJECT_VERSION }}
          TAG_NEW: staging
          CONTENT_TYPE: " application/vnd.docker.distribution.manifest.v2+json"
          AUTH: ${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          MANIFEST: $(curl -u $AUTH -H "Accept:$CONTENT_TYPE" "$REGISTRY_NAME/v2/$REPOSITORY/manifests/$TAG_OLD}")
          
  manual_deploy:
    name: Deploy on production
    runs-on: ubuntu-latest
    steps:
      - name: Adding staging tag
        run: curl -X PUT -u "$AUTH" -H "Content-Type:$CONTENT_TYPE" -d "$MANIFEST" "$REGISTRY_NAME/v2/$REPOSITORY/manifests/$TAG_NEW"
        env:
          REGISTRY_NAME: "http://hub.docker.com:5000"
          REPOSITORY: edugame/front
          TAG_OLD: ${{ env.EDUGAME_PROJECT_VERSION }}
          TAG_NEW: production
          CONTENT_TYPE: " application/vnd.docker.distribution.manifest.v2+json"
          AUTH: ${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          MANIFEST: $(curl -u $AUTH -H "Accept:$CONTENT_TYPE" "$REGISTRY_NAME/v2/$REPOSITORY/manifests/$TAG_OLD}")
